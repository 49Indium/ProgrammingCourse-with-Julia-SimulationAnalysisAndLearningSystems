# Project \#2 - Semester 2, 2021
# Discrete Event Simulation (+ perspective seminar summary)

(last edit: Sep 2, 2021)

**Due:** End of Day, Friday, 15, October, 2021. Late submissions are not accepted. **Work in pairs**.

**Note:** The teaching staff will only answer questions (via Piazza, consultation hour, or practicals) regarding this assignment up to the late evening of Wednesday 13/10.

**Weights and marking criteria:** Total number of points: **100**. There are **10** points for handing in according to the hand-in instructions, including a voice recording, neat output, and very importantly the GitHub repo. There are **10** points for the summary of Maithili Mehta's perspective seminar. The remaining **80** points are for the project with more details to be updated.

**Submission format:** This assignment should be submitted via a GitHub Repo and a PDF file via Blackboard. 

Specific instructions for the GitHub repo are below. It is important that the GitHub repo be made **private** and the course user name `uqMATH2504` be invited as a collaborator. It is also important to name the repo exactly as `<<FIRST NAME>>-<<LAST NAME>>-2504-2021-PROJECT2`. So for example if your name is "Jeannette Young", the repo name should be `Jeannette-Young-2504-2021-PROJECT2`.

The PDF file should be a nice formatted file that has:

* Your name, student number, and assignment title (Project 2 - 2021) on the top.
* A (clickable) link to your GitHub repo.
* The code and output should be presented sequentially for each question. I.e. question 1's code and output, followed by question 2's code and output, etc...

The recommended way to make the PDF file is via a Jupyter notebook where you copy in some code and output into the notebook, and in certain cases use `include()` to run Julia code if appropriate. You also comment on questions in this PDF (e.g. when asked to answer things not via code). If desired you could keep this jupyter notebook (`.ipynb` file) in the repo. However, this Jupyter notebook will not be checked (only the PDF file), and it isn't required to be a "runnable" notebook. In any case, please avoid pixilated screenshots of code, so for example if you choose to format your PDF file in MS-word (instead of Jupyter), make sure the code is clean, formatted, and readable. 

Marking responses will be made by the teaching staff by annotating **selected parts** of your PDF file via blackboard. Hence a very readable and clean PDF file is important. Note that in printing Jupyter to PDF (or exporting to PDF) there may sometimes be excessive white space. Do not worry about this extra white space; it is not a problem.

**Work in pairs**: This is work in pairs. Plagiarism will not be accepted. Nevertheless, feel free to consult with friends or classmates via Piazza and other means about how to go about certain tasks.

**Marking Criteria**: 

* 10 points are allocated for following instructions and the GitHub repo.

* 10 points are allocated to the summary of the perspective seminar. 2 points for coherent and grammatically correct writing. 6 points for completeness (the writeup should answer all questions posed). 2 points of originality and style.

* 80 points are for the polynomial project itself. Details are to be updated. 

* In general, points **will be** deducted for sloppy coding style. Make sure to have your code properly indented, to use sensible and consistent variable names, and to write code that is in general clean and consistent. 

---

## Setting up your GitHub repo for hand-in (10pts):

* Ideally use the same account you used for PROJECT1 and HW1. 
* Create a new repo for this assignment. Name the repo exactly as `<<FIRST NAME>>-<<LAST NAME>>-2504-2021-PROJECT2`. So for example if your name is "Jeannette Young", the repo name should be `Jeannette-Young-2504-2021-PROJECT2`.
* Make sure the repo is **private**.
* Invite the course GitHub user, `uqMATH2504` as a collaborator. You may do so early on while working on the project, and must do this no later than the project due date.
* Do **not** make any changes (commits) to the repo after the project due date. 
* Create a local clone of the repo. It is recommended that use use `git` command line via the shell to work on making changes/additions to the assignment and submitting the changes. However you are free to use any other mechanism (VS-Code, GitHub desktop, etc).
* If for some reason you are not able or willing ot use GitHub an alternative is GitLab. This is not recommended as it adds additional work to the teaching staff, however if you wish to use GitLab instead of GitHub contact the teaching staff for permission.

Your GitHub repo should be formatted as exactly as follows:
* Have a `README.md` file which states your name, the assignment title, and has a (clickable) link to the assignment instructions on the course website (to this document). 
* Have a `LICENSE.md` file. Choose a license as you wish (for example the MIT license). However keep in mind that you must keep the submission private until the end of the semester.
* Have a `.gitignore` file. 
* More information will soon be updated.

* Note: make sure that there aren't any files in your submission repo except for those mentioned above (with the exception of perhaps a Jupyter `.ipynb` file if you choose to use it for creating the PDF). Use may use the `.gitignore` file to ensure `git` does not commit additional files and output files to your `repo`.

## Perspective seminar question (10pts)

Write a 1-4 paragraph summary of Maithili Mehta's perspective seminar. The writeup should answer these questions without treating the questions directly. That is, don't write "the answer to Q1 is..." etc. Instead incorporate the answers in a flowing writeup report (like a blog post or letter). You may use first person, or similar. Present the writeup as part of your PDF file submission (as the first item in the submission).

The writeup should address the following questions:

1. What was Amy’s career path, and her relationship with software, mathematics, and statistics?
1. Where does she currently work? What does she do in her job? How do you perceive her personal experience from here job?
1. Discuss a few key tools that she spoke about during the talk, such as programming languages, mathematics, machine learning, statistical tools, platforms, and the like. Was this the first time that you heard about any of these tools?
1. Have you picked up any tips from Amy’s talk, which you can perhaps use in your career down the road?
1. Feel free to state anything else that you found interesting from the talk.


## Main project task (80pts)

Your task is to simulate a complex queueing network system/model. In this model there are $L$ stations (e.g. $L=5$ or $L=100$) and each station has a **server** and a **waiting buffer**. There are jobs traversing through the network and the stations. Jobs can be numbered $\ell=1,2,3,\ldots$ and it is expected that the simulation processes thousands, millions, or more jobs. 

A job's location can be one of:

* Out the system prior to arrival (still doesn't exist).
* In the system in a buffer of one of the stations (queueing).
* In the system being served by one of the stations.
* In the system currently moving between stations.
* Out of the system after leaving.

Motivation: think of an amusement park (sea world....)

In this continuous time system, jobs arrive to the system according to a random process (see below) and the traverse between the stations as we describe now.

Each station $i=1,\ldots,L$ has a service rate $\mu_i > 0$ which is the inverse of the mean expected time it takes the server to process a job. It also has a buffer capacity $K_i$ which implies the number of jobs that can queue in the buffer. The capacity $K_i$ is a non-negative integer or can be $\infty$.

When a job arrives to station $i$, if there is room in the buffer the buffer and queues for service. However if the buffer is full (the current jobs waiting in the buffer is equal to $K_i$), the job does not enter the buffer and moves according to an **overflow rule** (these rules are described below).

Durations of events follow independent random variables. These include

* Durations between times of external arrivals.
* Durations of service times.
* Duration of time moving between stations when overflowing.
* Duration of time moving between stations after service.


(Routhing) Matrix $P$: $P_{i,j}$ probability of going to station j after compleining service in $i$.  Sub-stochastic, non-negative entries, spectral radius. I + P + P^2 + .... converges.. inverse of (I-P) exists....

(Overflow) Matrix $Q$: $Q_{i,j}$ also sub-strochastic and it says... if a job arrives to station $i$ with $K_i$ in the buffer (station is full) then you overflow and go from $i$ to $j$ with probability $Q_{i,j}$ or leave... with 1- \sum_j Q_{i,j}$


External arrivals decide which station to go to first based on p^e_i.... 